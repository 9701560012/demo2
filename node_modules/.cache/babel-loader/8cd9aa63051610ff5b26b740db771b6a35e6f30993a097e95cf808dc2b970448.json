{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/Desktop/demo/src/components/Swr.jsx\",\n  _s = $RefreshSig$();\nimport useSWR from 'swr';\n\n// Import useSWR from swr package\n\n// created function to handle API request\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetcher = (...args) => fetch(...args).then(res => res.json());\nconst Swr = () => {\n  _s();\n  const {\n    data: countries,\n    error,\n    isValidating\n  } = useSWR('https://restcountries.com/v2/all', fetcher);\n\n  // Handles error and loading state\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"failed\",\n    children: \"failed to load\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 21\n  }, this);\n  if (isValidating) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Loading\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 28\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: countries && countries.map((country, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: country.flags.png,\n      alt: \"flag\",\n      width: 100\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Swr, \"yTVA28n+LoDfXxX4y4HvofOJvQ0=\", false, function () {\n  return [useSWR];\n});\n_c = Swr;\nexport default Swr;\nvar _c;\n$RefreshReg$(_c, \"Swr\");","map":{"version":3,"names":["useSWR","jsxDEV","_jsxDEV","fetcher","args","fetch","then","res","json","Swr","_s","data","countries","error","isValidating","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","country","index","src","flags","png","alt","width","_c","$RefreshReg$"],"sources":["/Users/macuser/Desktop/demo/src/components/Swr.jsx"],"sourcesContent":["import useSWR from 'swr';\n\n// Import useSWR from swr package\n\n// created function to handle API request\nconst fetcher = (...args) => fetch(...args).then((res) => res.json());\n\nconst Swr = () => {\n  const {\n    data: countries,\n    error,\n    isValidating,\n  } = useSWR('https://restcountries.com/v2/all', fetcher);\n\n  // Handles error and loading state\n  if (error) return <div className='failed'>failed to load</div>;\n  if (isValidating) return <div className=\"Loading\">Loading...</div>;\n\n  return (\n    <div>\n      {countries &&\n        countries.map((country, index) => (\n          <img key={index} src={country.flags.png} alt='flag' width={100} />\n        ))}\n    </div>\n  );\n};\n\nexport default Swr;"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,KAAK;;AAExB;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAGA,CAAC,GAAGC,IAAI,KAAKC,KAAK,CAAC,GAAGD,IAAI,CAAC,CAACE,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;AAErE,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM;IACJC,IAAI,EAAEC,SAAS;IACfC,KAAK;IACLC;EACF,CAAC,GAAGd,MAAM,CAAC,kCAAkC,EAAEG,OAAO,CAAC;;EAEvD;EACA,IAAIU,KAAK,EAAE,oBAAOX,OAAA;IAAKa,SAAS,EAAC,QAAQ;IAAAC,QAAA,EAAC;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC9D,IAAIN,YAAY,EAAE,oBAAOZ,OAAA;IAAKa,SAAS,EAAC,SAAS;IAAAC,QAAA,EAAC;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAElE,oBACElB,OAAA;IAAAc,QAAA,EACGJ,SAAS,IACRA,SAAS,CAACS,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BrB,OAAA;MAAiBsB,GAAG,EAAEF,OAAO,CAACG,KAAK,CAACC,GAAI;MAACC,GAAG,EAAC,MAAM;MAACC,KAAK,EAAE;IAAI,GAArDL,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkD,CAClE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAACV,EAAA,CAnBID,GAAG;EAAA,QAKHT,MAAM;AAAA;AAAA6B,EAAA,GALNpB,GAAG;AAqBT,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}